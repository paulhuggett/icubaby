name: Codacy Clang-Tidy
on:
  push:
    branches:
      - main
      - v2
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  contents: read

jobs:
  codacy:
    name: clang-tidy to Codacy
    runs-on: ubuntu-latest
    env:
      CCT_VERSION: 1.3.2
      CCT: codacy-clang-tidy-linux-1.3.2
      CODACY_URL: https://api.codacy.com
      # The path for clang-tidy output.
      CLANG_TIDY_OUT: /tmp/clang-tidy-out
      # The path for codacy-clang-tidy output.
      CCT_OUT: /tmp/cct-out

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: 'True'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake clang++-15 clang-tidy-15

      - name: Download the codacy-clang-tidy tool
        env:
          CCT_DOWNLOAD_URL: https://github.com/codacy/codacy-clang-tidy/releases/download/${{ env.CCT_VERSION }}/${{ env.CCT }}
        run: |
          mkdir -p "$HOME/cct"
          curl -L "${{ env.CCT_DOWNLOAD_URL }}" -o "$HOME/cct/${{ env.CCT }}"
          chmod +x "$HOME/cct/${{ env.CCT }}"

      - name: Configure
        run: |
          cmake -S .                                 \
                -B build                             \
                -D CMAKE_EXPORT_COMPILE_COMMANDS=Yes \
                -D CMAKE_BUILD_TYPE=Release          \
                -D CMAKE_C_COMPILER=clang-15         \
                -D CMAKE_CXX_COMPILER=clang++-15

      - name: Run clang-tidy
        run: |
          find . -name "*.?pp" -not -path "./build*/*" -print0 | \
          xargs -0 clang-tidy-15 -p=build/compile_commands.json | \
          tee -a "${{ env.CLANG_TIDY_OUT }}"

      # Convert the clang-tidy output to a format that the Codacy API accepts
      - name: Run codacy-clang-tidy
        run: |
          "$HOME/cct/${{ env.CCT }}" < "${{ env.CLANG_TIDY_OUT }}" > "${{ env.CCT_OUT }}"

      - name: Upload to the Codacy server
        run: |
          COMMIT=$(git rev-parse HEAD)
          # Send the results to Codacy
          curl -XPOST                                                  \
               -L                                                      \
               -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
               -H "Content-type: application/json"                     \
               -d "@${{ env.CCT_OUT }}"                                \
               "${{ env.CODACY_URL }}/2.0/commit/${COMMIT}/issuesRemoteResults"
          # Signal that Codacy can use the sent results and start a new analysis
          curl -XPOST                                                  \
               -L                                                      \
               -H "project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}" \
               -H "Content-type: application/json"                     \
               "${{ env.CODACY_URL }}/2.0/commit/${COMMIT}/resultsFinal"
